## Function to check logstash events stats
## usage: CheckLogstashEvents
## Requirements: install jq library
## Author: Jordan A. Caraballo-Vega
CheckLogstashEvents() {
    HOSTNAME=`/bin/hostname -s`
    STATUS=0

    RAWCURL=$(curl -s -XGET http://localhost:9600/_node/stats?pretty 2>&1)

    # Send Critical if service is not running
    if [ -z "$RAWCURL" ]; then
        STATUS=2
        RESULT="Curl output not found. Service might not be running."
    else
        # Below there are multiple instances that could be added to parse
        # the result from the curl call. Grep is used to simply the development
        # if someone wants to add more fields to the checks.
        threads_count=`echo $RAWCURL | jq -r ".jvm.threads.count"`
        threads_peak=`echo $RAWCURL | jq -r ".jvm.threads.peak_count"`
        jvm_mem=`echo $RAWCURL | jq -r ".jvm.mem.heap_used_percent"`
        events_duration=`echo $RAWCURL | jq -r ".pipeline.events.duration_in_millis"`
        events_in=`echo $RAWCURL | jq -r ".pipeline.events.in"`
        events_out=`echo $RAWCURL | jq -r ".pipeline.events.out"`
        events_filtered=`echo $RAWCURL | jq -r ".pipeline.events.filtered"`

        # Verify if result is within expected parameters
        if [ $threads_count -gt 100 ] | [ $jvm_mem -gt 80 ]; then
            STATUS=2
        elif [ $threads_count -gt 95 ] | [ $jvm_mem -gt 65 ]; then
            STATUS=1
        fi

        RESULT="JVM: ${jvm_mem}%-heap. Threads: ${threads_count}-count, ${threads_peak}-peak. Events: ${events_in}-in, ${events_out}-out, ${events_filtered}-filtered, ${events_duration}-duration."

    fi

    ${LOGGER} -t "${LOGGER_TAG}" "CheckLogstashEvents: ${HOSTNAME} ${STATUS} ${RESULT}"
    DATA="${DATA}
${HOSTNAME} CheckLogstashEvents ${STATUS} ${RESULT}"

}
